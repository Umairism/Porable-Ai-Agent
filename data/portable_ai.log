2025-08-05 17:39:07,887 - __main__ - INFO - Initializing Optimized Portable AI Agent...
2025-08-05 17:39:11,844 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:39:11,844 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:39:19,411 - __main__ - INFO - AI Engine initialized in 11.52s
2025-08-05 17:39:19,653 - __main__ - ERROR - Error initializing components: no such column: importance_score
2025-08-05 17:39:19,653 - root - ERROR - Fatal error: no such column: importance_score
Traceback (most recent call last):
  File "D:\Github\Porable-Ai-Agent\optimized_main.py", line 606, in main
    ai_agent = OptimizedPortableAI(config_path=args.config, user_id=args.user_id)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Github\Porable-Ai-Agent\optimized_main.py", line 60, in __init__
    self.initialize_components()
  File "D:\Github\Porable-Ai-Agent\optimized_main.py", line 93, in initialize_components
    self.knowledge_base = OptimizedKnowledgeBase(
                          ^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Github\Porable-Ai-Agent\knowledge\optimized_knowledge_base.py", line 38, in __init__
    self.init_database()
  File "D:\Github\Porable-Ai-Agent\knowledge\optimized_knowledge_base.py", line 104, in init_database
    conn.execute("CREATE INDEX IF NOT EXISTS idx_importance ON knowledge_items(importance_score DESC)")
sqlite3.OperationalError: no such column: importance_score
2025-08-05 17:39:21,639 - __main__ - INFO - All data saved successfully
2025-08-05 17:40:04,845 - __main__ - INFO - Initializing Optimized Portable AI Agent...
2025-08-05 17:40:08,397 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:40:08,397 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:40:12,630 - __main__ - INFO - AI Engine initialized in 7.78s
2025-08-05 17:40:12,771 - __main__ - ERROR - Error initializing components: 'OptimizedKnowledgeBase' object has no attribute 'logger'
2025-08-05 17:40:12,772 - root - ERROR - Fatal error: 'OptimizedKnowledgeBase' object has no attribute 'logger'
Traceback (most recent call last):
  File "D:\Github\Porable-Ai-Agent\knowledge\optimized_knowledge_base.py", line 706, in rebuild_index
    self.logger.info("Rebuilding FAISS index...")
    ^^^^^^^^^^^
AttributeError: 'OptimizedKnowledgeBase' object has no attribute 'logger'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Github\Porable-Ai-Agent\knowledge\optimized_knowledge_base.py", line 697, in load_existing_data
    self.rebuild_index()
  File "D:\Github\Porable-Ai-Agent\knowledge\optimized_knowledge_base.py", line 743, in rebuild_index
    self.logger.error(f"Error rebuilding index: {e}")
    ^^^^^^^^^^^
AttributeError: 'OptimizedKnowledgeBase' object has no attribute 'logger'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Github\Porable-Ai-Agent\optimized_main.py", line 606, in main
    ai_agent = OptimizedPortableAI(config_path=args.config, user_id=args.user_id)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Github\Porable-Ai-Agent\optimized_main.py", line 60, in __init__
    self.initialize_components()
  File "D:\Github\Porable-Ai-Agent\optimized_main.py", line 93, in initialize_components
    self.knowledge_base = OptimizedKnowledgeBase(
                          ^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Github\Porable-Ai-Agent\knowledge\optimized_knowledge_base.py", line 69, in __init__
    self.load_existing_data()
  File "D:\Github\Porable-Ai-Agent\knowledge\optimized_knowledge_base.py", line 700, in load_existing_data
    self.logger.error(f"Error loading existing data: {e}")
    ^^^^^^^^^^^
AttributeError: 'OptimizedKnowledgeBase' object has no attribute 'logger'
2025-08-05 17:40:14,886 - __main__ - INFO - All data saved successfully
2025-08-05 17:41:10,540 - __main__ - INFO - Initializing Optimized Portable AI Agent...
2025-08-05 17:41:14,076 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:41:14,077 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:41:19,123 - __main__ - INFO - AI Engine initialized in 8.58s
2025-08-05 17:41:19,513 - knowledge.optimized_knowledge_base - INFO - Loaded FAISS index with 0 items
2025-08-05 17:41:19,513 - __main__ - INFO - Knowledge Base initialized in 0.39s
2025-08-05 17:41:19,707 - __main__ - ERROR - Error initializing components: 'OptimizedConversationMemory' object has no attribute 'logger'
2025-08-05 17:41:19,708 - root - ERROR - Fatal error: 'OptimizedConversationMemory' object has no attribute 'logger'
Traceback (most recent call last):
  File "D:\Github\Porable-Ai-Agent\memory\optimized_conversation_memory.py", line 676, in load_user_profiles
    self.logger.info(f"Loaded {len(self.user_profile_cache)} user profiles")
    ^^^^^^^^^^^
AttributeError: 'OptimizedConversationMemory' object has no attribute 'logger'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Github\Porable-Ai-Agent\optimized_main.py", line 606, in main
    ai_agent = OptimizedPortableAI(config_path=args.config, user_id=args.user_id)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Github\Porable-Ai-Agent\optimized_main.py", line 60, in __init__
    self.initialize_components()
  File "D:\Github\Porable-Ai-Agent\optimized_main.py", line 103, in initialize_components
    self.conversation_memory = OptimizedConversationMemory(
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Github\Porable-Ai-Agent\memory\optimized_conversation_memory.py", line 76, in __init__
    self.load_user_profiles()
  File "D:\Github\Porable-Ai-Agent\memory\optimized_conversation_memory.py", line 679, in load_user_profiles
    self.logger.error(f"Error loading user profiles: {e}")
    ^^^^^^^^^^^
AttributeError: 'OptimizedConversationMemory' object has no attribute 'logger'
2025-08-05 17:41:21,835 - knowledge.optimized_knowledge_base - INFO - FAISS index saved successfully
2025-08-05 17:41:21,838 - __main__ - INFO - All data saved successfully
2025-08-05 17:41:21,859 - knowledge.optimized_knowledge_base - INFO - FAISS index saved successfully
2025-08-05 17:41:58,575 - __main__ - INFO - Initializing Optimized Portable AI Agent...
2025-08-05 17:42:02,118 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:42:02,118 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:42:05,920 - __main__ - INFO - AI Engine initialized in 7.35s
2025-08-05 17:42:05,927 - knowledge.optimized_knowledge_base - INFO - Loaded FAISS index with 0 items
2025-08-05 17:42:05,927 - __main__ - INFO - Knowledge Base initialized in 0.01s
2025-08-05 17:42:05,931 - memory.optimized_conversation_memory - INFO - Loaded 0 user profiles
2025-08-05 17:42:05,932 - __main__ - INFO - Conversation Memory initialized in 0.01s
2025-08-05 17:42:05,932 - __main__ - INFO - All components initialized successfully in 7.36s
2025-08-05 17:42:05,945 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:42:05,945 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:42:10,221 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:42:10,543 - __main__ - ERROR - Error saving data: sys.meta_path is None, Python is likely shutting down
2025-08-05 17:42:10,544 - knowledge.optimized_knowledge_base - ERROR - Error saving index: name 'open' is not defined
2025-08-05 17:42:10,546 - memory.optimized_conversation_memory - ERROR - Error in batch processing: unsupported operand type(s) for +: 'NoneType' and 'int'
2025-08-05 17:42:10,547 - memory.optimized_conversation_memory - INFO - Pattern batch processed: 1 patterns
2025-08-05 17:42:10,637 - memory.optimized_conversation_memory - ERROR - Error in batch processing: unsupported operand type(s) for +: 'NoneType' and 'int'
2025-08-05 17:42:10,639 - memory.optimized_conversation_memory - INFO - Session ended: session_1754397725930_3663
2025-08-05 17:42:59,720 - __main__ - INFO - Initializing Optimized Portable AI Agent...
2025-08-05 17:43:03,265 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:03,265 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:07,818 - __main__ - INFO - AI Engine initialized in 8.10s
2025-08-05 17:43:07,822 - knowledge.optimized_knowledge_base - INFO - Loaded FAISS index with 0 items
2025-08-05 17:43:07,822 - __main__ - INFO - Knowledge Base initialized in 0.00s
2025-08-05 17:43:07,825 - memory.optimized_conversation_memory - INFO - Loaded 0 user profiles
2025-08-05 17:43:07,825 - __main__ - INFO - Conversation Memory initialized in 0.00s
2025-08-05 17:43:07,825 - __main__ - INFO - All components initialized successfully in 8.11s
2025-08-05 17:43:07,830 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:07,830 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:11,611 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:43:11,612 - __main__ - ERROR - Error processing input: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`.
2025-08-05 17:43:11,719 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:11,720 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:15,514 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:43:15,624 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:15,624 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:20,156 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:43:20,158 - __main__ - ERROR - Error processing input: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`.
2025-08-05 17:43:20,264 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:20,265 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:24,490 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:43:24,491 - __main__ - ERROR - Error processing input: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`.
2025-08-05 17:43:24,598 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:24,598 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:28,360 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:43:28,361 - __main__ - ERROR - Error processing input: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`.
2025-08-05 17:43:28,470 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:28,470 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:33,052 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:43:33,054 - __main__ - ERROR - Error processing input: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`.
2025-08-05 17:43:33,160 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:33,160 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:36,951 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:43:36,954 - __main__ - ERROR - Error processing input: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`.
2025-08-05 17:43:37,060 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:37,061 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:41,322 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:43:41,324 - __main__ - ERROR - Error processing input: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`.
2025-08-05 17:43:41,431 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:41,431 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:45,394 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:43:45,396 - __main__ - ERROR - Error processing input: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`.
2025-08-05 17:43:45,503 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:43:45,503 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:43:49,738 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:43:49,740 - __main__ - ERROR - Error processing input: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`.
2025-08-05 17:43:50,151 - knowledge.optimized_knowledge_base - ERROR - Error saving index: name 'open' is not defined
2025-08-05 17:43:50,152 - memory.optimized_conversation_memory - ERROR - Error in batch processing: unsupported operand type(s) for +: 'NoneType' and 'int'
2025-08-05 17:43:50,153 - memory.optimized_conversation_memory - INFO - Pattern batch processed: 1 patterns
2025-08-05 17:43:50,325 - memory.optimized_conversation_memory - ERROR - Error in batch processing: unsupported operand type(s) for +: 'NoneType' and 'int'
2025-08-05 17:43:50,326 - memory.optimized_conversation_memory - INFO - Session ended: session_1754397787824_8880
2025-08-05 17:43:50,358 - __main__ - ERROR - Error saving data: sys.meta_path is None, Python is likely shutting down
2025-08-05 17:45:39,472 - __main__ - INFO - Initializing Optimized Portable AI Agent...
2025-08-05 17:45:43,002 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:45:43,002 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:45:47,269 - __main__ - INFO - AI Engine initialized in 7.80s
2025-08-05 17:45:47,274 - knowledge.optimized_knowledge_base - INFO - Loaded FAISS index with 0 items
2025-08-05 17:45:47,274 - __main__ - INFO - Knowledge Base initialized in 0.00s
2025-08-05 17:45:47,278 - memory.optimized_conversation_memory - INFO - Loaded 0 user profiles
2025-08-05 17:45:47,278 - __main__ - INFO - Conversation Memory initialized in 0.00s
2025-08-05 17:45:47,278 - __main__ - INFO - All components initialized successfully in 7.81s
2025-08-05 17:45:53,898 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:45:53,898 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:45:58,136 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:46:16,105 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-08-05 17:46:16,105 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: all-MiniLM-L6-v2
2025-08-05 17:46:20,660 - knowledge.optimized_knowledge_base - ERROR - Error in knowledge search: 
2025-08-05 17:46:20,663 - __main__ - ERROR - Error processing input: Asking to pad but the tokenizer does not have a padding token. Please select a token to use as `pad_token` `(tokenizer.pad_token = tokenizer.eos_token e.g.)` or add a new pad token via `tokenizer.add_special_tokens({'pad_token': '[PAD]'})`.
